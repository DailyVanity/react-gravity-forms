"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireWildcard(require("react")),FormFields=_interopRequireWildcard(require("../Fields")),_jsxRuntime=require("react/jsx-runtime");function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(b,c){if(!c&&b&&b.__esModule)return b;if(null===b||"object"!=typeof b&&"function"!=typeof b)return{default:b};var d=_getRequireWildcardCache(c);if(d&&d.has(b))return d.get(b);var e={__proto__:null},f=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in b)if("default"!=a&&Object.prototype.hasOwnProperty.call(b,a)){var g=f?Object.getOwnPropertyDescriptor(b,a):null;g&&(g.get||g.set)?Object.defineProperty(e,a,g):e[a]=b[a]}return e.default=b,d&&d.set(b,e),e}const frac2dec=a=>{let b=a.split("-");if(1===b.length&&(b=a.split(" ")),1<b.length&&-1!==a.indexOf("/")){const a=parseInt(b[0]),c=b[1].split("/"),d=parseInt(c[0])/parseInt(c[1]);return a+d}if(-1!==a.indexOf("/")){const b=a.split("/"),c=parseInt(b[0])/parseInt(b[1]);return c}return parseInt(a)},formatComponentName=a=>a.charAt(0).toUpperCase()+a.slice(1),formatWidthFromCss=a=>{if(!a)return{};const b=a.indexOf("["),c=a.indexOf("]");if(-1===b||-1===c)return{};const d=a.substring(b+1,c).split(",").map(a=>frac2dec(a.replace(/\s/g,""))),e=`${a.replace(a.substring(b,c+1),"")} custom-width`;return{width:d,cleanedCssClass:e}},RenderField=({field:a,formValues:b,submitFailed:c,submitSuccess:d,setTouched:e,setErrorMessages:f,touched:g,updateForm:h,pages:i,prevStep:j,nextStep:k,isNextDisabled:l,saveStateToHtmlField:m,styledComponents:n,customComponents:o,error:p,unsetError:q,dropzoneText:r,language:s,apiKeys:t,errors:u,...v})=>{let w=FormFields[formatComponentName(a.type)];o&&(o[a.id]||o[a.cssClass]||o[a.inputName])&&(w=FormFields[formatComponentName("custom")]);const{cleanedCssClass:x,width:y}=formatWidthFromCss(a.cssClass);y&&(a.cssClass=x,a.width=y);const z=b[a.id]?b[a.id].value:a.defaultValue,[A,B]=(0,_react.useState)(`${a.cssClass}${"select"===a.type?z.value&&""!==z.value?" filled":"":z&&""!==z?" filled":""}`);return(0,_jsxRuntime.jsx)(w,{field:a,value:z,updateForm:(a,b,c)=>h(a,b,c),validationMessage:!!b[a.id]&&b[a.id].valid,formValues:b,submitFailed:c,submitSuccess:d,touched:g[a.id],setTouched:e,setErrorMessages:f,unsetError:q,error:p,pages:i,prevStep:j,nextStep:k,isNextDisabled:l,hideField:!!b[a.id]&&b[a.id].hideField,saveStateToHtmlField:!("html"!==a.type||-1===a.cssClass.indexOf("set-state"))&&{formValues:b,saveStateToHtmlField:m},styledComponents:n,cssClass:A,setFocusClass:a=>{a?-1===A.indexOf(" filled")&&B(`${A} filled`):B(A.replace(" filled",""))},component:o&&(o[a.id]||o[a.cssClass]||o[a.inputName]),dropzoneText:r,language:s,apiKeys:t,errors:u,...v},`el-${a.formId}-${a.id}`)};var _default=exports.default=RenderField;