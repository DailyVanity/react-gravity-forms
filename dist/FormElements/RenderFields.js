"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireWildcard(require("react")),_RenderField=_interopRequireDefault(require("./RenderField")),_jsxRuntime=require("react/jsx-runtime");function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(b,c){if(!c&&b&&b.__esModule)return b;if(null===b||"object"!=typeof b&&"function"!=typeof b)return{default:b};var d=_getRequireWildcardCache(c);if(d&&d.has(b))return d.get(b);var e={__proto__:null},f=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in b)if("default"!=a&&Object.prototype.hasOwnProperty.call(b,a)){var g=f?Object.getOwnPropertyDescriptor(b,a):null;g&&(g.get||g.set)?Object.defineProperty(e,a,g):e[a]=b[a]}return e.default=b,d&&d.set(b,e),e}const divideFieldsIntoPages=(a,b)=>{const c=b.map(()=>[]);for(let d=0;d<a.length;d++){c[a[d].pageNumber];c[a[d].pageNumber-1]&&("page"===a[d].type?c[a[d].pageNumber-2].push(a[d]):c[a[d].pageNumber-1].push(a[d]))}return c},getMaxFieldId=a=>{let b=0;for(let c=0;c<a.length;c++)parseInt(a[c].id)>b&&(b=parseInt(a[c].id));return b+1},fieldTypes=["checkbox","email","hidden","html","number","phone","radio","select","multiselect","text","textarea","website","page","date","fileupload","consent","password","section","scustom","name","address","buckarooideal","postcode","captcha"],honeyPotLables=["Name","Email","Phone","Comments"],honeypotLabel=honeyPotLables[Math.floor(Math.random()*Math.floor(4))];var _default=a=>{function b(a,b){return(0,_jsxRuntime.jsx)(_RenderField.default,{field:a,formValues:d,submitFailed:f,setTouched:i,setErrorMessages:j,submitSuccess:g,updateForm:e,touched:h,pages:k&&k.pages.length,prevStep:m,nextStep:n,isNextDisabled:o,checkConditionalLogic:p,saveStateToHtmlField:q,styledComponents:s,customComponents:t,error:!!(v&&v[a.id])&&v[a.id],unsetError:u,dropzoneText:w,language:y,apiKeys:z,fields:b,errors:v,...A},`${a.formId}-${a.id}`)}const{fields:c,formValues:d,updateForm:e,submitFailed:f,submitSuccess:g,touched:h,setTouched:i,setErrorMessages:j,pagination:k,activePage:l,prevStep:m,nextStep:n,isNextDisabled:o,checkConditionalLogic:p,saveStateToHtmlField:q,enableHoneypot:r,styledComponents:s,customComponents:t,unsetError:u,errors:v,dropzoneText:w,pageClicked:x,language:y,apiKeys:z,...A}=a,B=k?divideFieldsIntoPages(c,k.pages):void 0,C=getMaxFieldId(c),[D,E]=(0,_react.useState)(""),F=(0,_react.useRef)();(0,_react.useEffect)(()=>{F.current=l});const G=F.current;return(0,_jsxRuntime.jsxs)("div",{className:`form-fields${k&&1<k.pages.length?` hasPages ${x?"":" noPageClicked"}`:""}`,children:[k&&1<k.pages.length?k.pages.map((a,d)=>(0,_jsxRuntime.jsxs)("div",{className:`page${l===d+1?" active":""}${G&&d===G&&l!==d+1&&G!==l?" prevStep":""}`,children:[a&&(0,_jsxRuntime.jsx)("div",{className:"gf_step",children:(0,_jsxRuntime.jsx)("span",{children:a})}),B[d].map(a=>fieldTypes.includes(a.type)&&b(a,c))]},`page-${d}`)):c.map(a=>fieldTypes.includes(a.type)&&b(a,c)),r&&(0,_jsxRuntime.jsxs)("div",{className:"form-field gform_validation_container",children:[(0,_jsxRuntime.jsx)("label",{htmlFor:`input_${C}`,className:"gf-label ",children:honeypotLabel}),(0,_jsxRuntime.jsx)("input",{type:"text",name:`input_${C}`,id:`input_${C}`,value:D,onChange:a=>E(a.target.value),autoComplete:"off"})]})]})};exports.default=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,