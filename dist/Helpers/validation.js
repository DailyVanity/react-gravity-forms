"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.validateField=exports.isRequired=exports.isEmail=exports.isUrl=exports.checkboxValidation=exports.selectValidation=exports.isEmpty=void 0;function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}var getMessage=function(a,b){return!!b&&(a&&"object"===_typeof(a)&&a[b]?a[b]:a)},isEmail=function(a,b){var c=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;if(!c.test(a)){var d=getMessage(b,"email");return d||"Enter a valid email"}return!1};exports.isEmail=isEmail;var isUrl=function(a,b){var c=/^(https?:\/\/)?((([a-z\d]([a-z\d-]*[a-z\d])*)\.)+[a-z]{2,}|((\d{1,3}\.){3}\d{1,3}))(\:\d+)?(\/[-a-z\d%_.~+]*)*(\?[;&a-z\d%_.~+=-]*)?(\#[-a-z\d_]*)?$/i;if(!c.test(a)){var d=getMessage(b,"url");return d||"Enter a valid url"}return!1};exports.isUrl=isUrl;var isEmpty=function(a){return!a};exports.isEmpty=isEmpty;var isRequired=function(a,b,c){if(a&&b){var d=getMessage(c,"required");return d||"This field is required"}return!1};exports.isRequired=isRequired;var selectValidation=function(a,b,c){return!(b===c&&a)};exports.selectValidation=selectValidation;var checkboxValidation=function(a,b){return!!(1>a.length)&&(b||"This field is required")};exports.checkboxValidation=checkboxValidation;var emailValidation=function(a,b){var c=b||!1,d=c.inputs,e=c.isRequired,f=c.errorMessage,g=f||!1,h=g.required,j=g.mismatch,k=a&&a.filter(function(a){return a&&""===a.val}).length;if((a&&2>a.length||0!==k)&&e)return h||"This field is required";if(a&&0<a.length)for(var l,m=0;a.length>m;m++)if(l=isEmail(a[m].val),l)return console.log(l),l;return!!(a&&2===a.length&&d&&2===d.length&&a[1]&&a[0]&&""!==a[1].val&&a[1].val!==a[0].val)&&(j||"Mismatch")},passwordValidation=function(a,b){var c=b||!1,d=c.inputs,e=c.isRequired,f=c.errorMessage,g=f||!1,h=g.required,i=g.mismatch,j=a&&a.filter(function(a){return a&&""===a.val}).length;return(a&&0===a.length||j===d.length)&&e?h||"This field is required":!!(a&&2===a.length&&d&&2===d.length&&a[1]&&a[0]&&""!==a[1].val&&a[1].val!==a[0].val)&&(i||"Mismatch")},isDate=function(a){for(var b=[],c=0;c<a.length;c++)if(a[c]){var d=a[c],e=d.val,f=d.label;if(e)if("MM"===f){(e.length>2||e<1||12<e)&&(b[c]={index:c,message:"Enter a valid month"})}else if("DD"===f){(e.length>2||e<1||31<e)&&(b[c]={index:c,message:"Enter a valid date"})}else if("YYYY"===f){var g=new Date().getFullYear()+1;(e.length>4||e<1920||e>g)&&(b[c]={index:c,message:"Enter a valid year"})}}return b},validateField=function(a,b){var c=b.type,d=b.isRequired;if(("checkbox"===c||"radio"===c)&&d)return checkboxValidation(a,b.errorMessage);if("password"===c)return passwordValidation(a,b);if("email"===c&&b.emailConfirmEnabled)return emailValidation(a,b);var e=isEmpty(a),f="",g=!!(b&&b.errorMessage)&&b.errorMessage;if(f=!!d&&isRequired(d,e,g),!f&&!e)if("email"===c)f=isEmail(a,g);else if("website"===c)f=isUrl(a,g);else if("date"===c){var h=!0;h=b.dateType&&"datepicker"===b.dateType?!!d&&isRequired(d,e,g):isDate(a,b),f=!!(0<h.length)&&h}return f};exports.validateField=validateField;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,