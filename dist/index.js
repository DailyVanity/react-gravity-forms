"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"FormConfirmation",{enumerable:!0,get:function(){return _FormElements.FormConfirmation}}),Object.defineProperty(exports,"FormError",{enumerable:!0,get:function(){return _FormElements.FormError}}),Object.defineProperty(exports,"RenderFields",{enumerable:!0,get:function(){return _FormElements.RenderFields}}),Object.defineProperty(exports,"Submit",{enumerable:!0,get:function(){return _FormElements.Submit}}),exports.default=void 0,Object.defineProperty(exports,"validateField",{enumerable:!0,get:function(){return _validation.validateField}});var _react=_interopRequireWildcard(require("react")),_isomorphicUnfetch=_interopRequireDefault(require("isomorphic-unfetch")),_FormElements=require("./FormElements"),_form=require("./Helpers/form"),_validation=require("./Helpers/validation"),_jsxRuntime=require("react/jsx-runtime");function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(b,c){if(!c&&b&&b.__esModule)return b;if(null===b||"object"!=typeof b&&"function"!=typeof b)return{default:b};var d=_getRequireWildcardCache(c);if(d&&d.has(b))return d.get(b);var e={__proto__:null},f=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in b)if("default"!=a&&Object.prototype.hasOwnProperty.call(b,a)){var g=f?Object.getOwnPropertyDescriptor(b,a):null;g&&(g.get||g.set)?Object.defineProperty(e,a,g):e[a]=b[a]}return e.default=b,d&&d.set(b,e),e}const GravityForm=a=>{var b;const{initialPage:c,populatedEntry:d,onChange:e}=a,[f,g]=(0,_react.useState)(!1),[h,i]=(0,_react.useState)(!1),[j,k]=(0,_react.useState)({}),[l,m]=(0,_react.useState)(!1),[n,o]=(0,_react.useState)(!1),[p,q]=(0,_react.useState)(!1),[r,s]=(0,_react.useState)({}),[t,u]=(0,_react.useState)({}),[v,w]=(0,_react.useState)(c||1),[x,y]=(0,_react.useState)({}),[z,A]=(0,_react.useState)({}),[B,C]=(0,_react.useState)(!1),[D,E]=(0,_react.useState)(!1),[F,G]=(0,_react.useState)(!1),[H,I]=(0,_react.useState)({}),J=(0,_react.useRef)(null),K=(0,_react.useCallback)(a=>{(0,_form.updateFieldsValuesBasedOnEntry)(a)},[]);(0,_react.useEffect)(()=>{(0,_form.fetchForm)({setFormData:s,setFormValues:k,setActivePage:w,setConditionFields:y,setConditionalIds:A,setPages:I,setIsMultiPart:C,...a})},[]),(0,_react.useEffect)(()=>{e&&e(j)},[j]),(0,_react.useEffect)(()=>{d&&K(d)},[d]);const L=()=>{if(J){const a=J.current.querySelector(".form-field.error");a&&a.scrollIntoView()}},{title:M,formID:N,submitIcon:O,saveStateToHtmlField:P,styledComponents:Q,customComponents:R,errorMessage:S,dropzoneText:T,loadingSpinner:U,onError:V,language:W,apiKeys:X}=a,{Button:Y,Loading:Z,FormError:$,FormConfirmation:_,GFWrapper:aa="div"}=Q||!1,{cssClass:ba,button:{conditionalLogic:ca}={}}=r||{},da=ca&&(0,_form.checkConditionalLogic)(ca,0<Object.keys(j).length?j:r.fields),ea=a=>{a.preventDefault(),(0,_form.prevStep)(j,H,v,w,E)},fa=async b=>{const{onSubmit:c,filterFormData:d}=a;let e=new FormData(b.target);d&&(e=d(e,j)),b.preventDefault();const f=(0,_form.forceValidation)(v,j,G,u);if(!f)return L(),!1;if(c)c(e);else{m(!0),o(!1),g(!1),q(!1),i(!1);const{formID:b,backendUrl:c,jumpToConfirmation:d,onSubmitSuccess:f,onError:h}=a,j=c.substring(0,c.indexOf("/wp-json"));(0,_isomorphicUnfetch.default)(`${j}/wp-json/gf/v2/forms/${b}/submissions`,{method:"POST",body:e}).then(a=>a.json()).then(b=>{if(b&&b.is_valid){if(f){const a=f(b);if(!a)return!1}const c=b.confirmation_message,{confirmation_type:e,confirmation_redirect:g}=b||!1;if(e&&g&&"redirect"===e&&"undefined"!=typeof window)return window.location.replace(g),!1;m(!1),o(!0),q(c),d&&(0,_form.scrollToConfirmation)(a,J,d)}else throw{response:b}}).catch(b=>{const c=b&&b.response&&b.response.validation_messages?b.response.validation_messages:"Something went wrong";h?(h(c),m(!1),g(!0)):(m(!1),g(!0),i(c)),d&&(0,_form.scrollToConfirmation)(a,J)})}};return(0,_jsxRuntime.jsxs)(aa,{ref:J,className:"form-wrapper",id:`gravity_form_${N}`,children:[r.title?null:Z&&(0,_jsxRuntime.jsx)(Z,{isLoading:!0}),f&&!n&&!V&&(0,_jsxRuntime.jsx)(_FormElements.FormError,{SFormError:$||!1,errorMessage:S||"There was a problem with your submission"}),n&&p&&(0,_jsxRuntime.jsx)(_FormElements.FormConfirmation,{confirmation:p,SFormConfirmation:_}),!n&&r.fields?(0,_jsxRuntime.jsxs)("form",{onSubmit:a=>fa(a),className:ba,encType:B?"multipart/form-data":void 0,noValidate:!0,children:[(r.title||r.description)&&(0,_jsxRuntime.jsxs)("div",{children:[r.title&&M?(0,_jsxRuntime.jsx)("h3",{className:"form-title",children:r.title}):null,r.description?(0,_jsxRuntime.jsx)("p",{className:"form-description",children:r.description}):null]}),(0,_jsxRuntime.jsxs)("div",{className:"form-wrapper",children:[(null===r||void 0===r||null===(b=r.pagination)||void 0===b?void 0:b.pages)&&(0,_jsxRuntime.jsx)(_FormElements.ProgressBar,{pagination:r.pagination,activePage:v,firstPageCssClass:r.firstPageCssClass}),(0,_jsxRuntime.jsx)(_FormElements.RenderFields,{styledComponents:Q,customComponents:R,fields:r.fields,formValues:j,submitFailed:f,submitSuccess:n,updateForm:(a,b,c)=>(0,_form.updateFormHandler)(b,a,c,j,k,z,x),touched:t,setTouched:a=>(0,_form.setTouchedHandler)(a,t,u),setErrorMessages:i,pagination:r.pagination,activePage:v,prevStep:a=>ea(a),nextStep:b=>(0,_form.nextStep)(b,a,H,j,v,w,E,u,G),checkConditionalLogic:(a,b)=>(0,_form.checkConditionalLogic)(a,b=!1),saveStateToHtmlField:P,enableHoneypot:r.enableHoneypot,errors:h,unsetError:a=>(0,_form.unsetError)(a,h),dropzoneText:T,pageClicked:D,language:W,apiKeys:X,...a}),(!r.pagination||r.pagination&&r.pagination.pages.length===v)&&(0,_jsxRuntime.jsx)(_FormElements.Submit,{Button:Y,Loading:Z,formData:r,submitIcon:O,submitting:l,prevStep:a=>ea(a),loadingSpinner:U,hideSubmitButton:da})]})]}):""]})};GravityForm.defaultProps={title:!0,submitIcon:!1,saveStateToHtmlField:!1,jumpToConfirmation:!0};var _default=exports.default=GravityForm;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHcmF2aXR5Rm9ybSIsInByb3BzIiwiYiIsImluaXRpYWxQYWdlIiwicG9wdWxhdGVkRW50cnkiLCJvbkNoYW5nZSIsInN1Ym1pdEZhaWxlZCIsInNldFN1Ym1pdEZhaWxlZCIsInVzZVN0YXRlIiwiZXJyb3JNZXNzYWdlcyIsInNldEVycm9yTWVzc2FnZXMiLCJmb3JtVmFsdWVzIiwic2V0Rm9ybVZhbHVlcyIsInN1Ym1pdHRpbmciLCJzZXRTdWJtaXR0aW5nIiwic3VibWl0U3VjY2VzcyIsInNldFN1Ym1pdFN1Y2Nlc3MiLCJjb25maXJtYXRpb25NZXNzYWdlIiwic2V0Q29uZmlybWF0aW9uTWVzc2FnZSIsImZvcm1EYXRhIiwic2V0Rm9ybURhdGEiLCJ0b3VjaGVkIiwic2V0VG91Y2hlZCIsImFjdGl2ZVBhZ2UiLCJzZXRBY3RpdmVQYWdlIiwiY29uZGl0aW9uRmllbGRzIiwic2V0Q29uZGl0aW9uRmllbGRzIiwiY29uZGl0aW9uYWxJZHMiLCJzZXRDb25kaXRpb25hbElkcyIsImlzTXVsdGlwYXJ0Iiwic2V0SXNNdWx0aVBhcnQiLCJwYWdlQ2xpY2tlZCIsInNldFBhZ2VDbGlja2VkIiwic2hvd1BhZ2VWYWxpZGF0aW9uTXNnIiwic2V0U2hvd1BhZ2VWYWxpZGF0aW9uTXNnIiwicGFnZXMiLCJzZXRQYWdlcyIsIndyYXBwZXJSZWYiLCJ1c2VSZWYiLCJ1cGRhdGVFbnRyeUZpZWxkcyIsInVzZUNhbGxiYWNrIiwidXBkYXRlRmllbGRzVmFsdWVzQmFzZWRPbkVudHJ5IiwidXNlRWZmZWN0IiwiZmV0Y2hGb3JtIiwic2Nyb2xsVG9GaXJzdEludmFsaWRGaWVsZCIsImZpcnN0RXJyRWwiLCJjdXJyZW50IiwicXVlcnlTZWxlY3RvciIsInNjcm9sbEludG9WaWV3IiwidGl0bGUiLCJmb3JtSUQiLCJzdWJtaXRJY29uIiwic2F2ZVN0YXRlVG9IdG1sRmllbGQiLCJzdHlsZWRDb21wb25lbnRzIiwiY3VzdG9tQ29tcG9uZW50cyIsImVycm9yTWVzc2FnZSIsImRyb3B6b25lVGV4dCIsImxvYWRpbmdTcGlubmVyIiwib25FcnJvciIsImxhbmd1YWdlIiwiYXBpS2V5cyIsIkJ1dHRvbiIsIkxvYWRpbmciLCJGb3JtRXJyb3IiLCJTRm9ybUVycm9yIiwiRm9ybUNvbmZpcm1hdGlvbiIsIlNGb3JtQ29uZmlybWF0aW9uIiwiR0ZXcmFwcGVyIiwiY3NzQ2xhc3MiLCJidXR0b24iLCJjb25kaXRpb25hbExvZ2ljIiwiaGlkZVN1Ym1pdEJ1dHRvbiIsImNoZWNrQ29uZGl0aW9uYWxMb2dpYyIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJmaWVsZHMiLCJoYW5kbGVQcmV2U3RlcCIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInByZXZTdGVwIiwib25TdWJtaXQiLCJldmVudCIsImN1c3RvbU9uU3VibWl0IiwiZmlsdGVyRm9ybURhdGEiLCJGb3JtRGF0YSIsInRhcmdldCIsImlzRm9ybVZhbGlkIiwiZm9yY2VWYWxpZGF0aW9uIiwiYmFja2VuZFVybCIsImp1bXBUb0NvbmZpcm1hdGlvbiIsIm9uU3VibWl0U3VjY2VzcyIsImdmU3VibWlzc2lvblVybCIsInN1YnN0cmluZyIsImluZGV4T2YiLCJmZXRjaCIsIm1ldGhvZCIsImJvZHkiLCJ0aGVuIiwicmVzcCIsImpzb24iLCJyZXNwb25zZSIsImlzX3ZhbGlkIiwicmVzIiwiY29uZmlybWF0aW9uX21lc3NhZ2UiLCJjb25maXJtYXRpb25fdHlwZSIsImNvbmZpcm1hdGlvbl9yZWRpcmVjdCIsIndpbmRvdyIsImxvY2F0aW9uIiwicmVwbGFjZSIsInNjcm9sbFRvQ29uZmlybWF0aW9uIiwiY2F0Y2giLCJlcnJvciIsInZhbGlkYXRpb25fbWVzc2FnZXMiLCJfanN4UnVudGltZSIsImpzeHMiLCJhYSIsInJlZiIsImNsYXNzTmFtZSIsImlkIiwiY2hpbGRyZW4iLCJqc3giLCJaIiwiaXNMb2FkaW5nIiwiX0Zvcm1FbGVtZW50cyIsImNvbmZpcm1hdGlvbiIsImVuY1R5cGUiLCJub1ZhbGlkYXRlIiwiZGVzY3JpcHRpb24iLCJwYWdpbmF0aW9uIiwiUHJvZ3Jlc3NCYXIiLCJmaXJzdFBhZ2VDc3NDbGFzcyIsIlJlbmRlckZpZWxkcyIsInVwZGF0ZUZvcm0iLCJmaWVsZCIsImlucHV0SUQiLCJ1cGRhdGVGb3JtSGFuZGxlciIsInNldFRvdWNoZWRIYW5kbGVyIiwibmV4dFN0ZXAiLCJjb25kaXRpb24iLCJlbmFibGVIb25leXBvdCIsImVycm9ycyIsInVuc2V0RXJyb3IiLCJTdWJtaXQiLCJkZWZhdWx0UHJvcHMiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiLi4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlLCB1c2VDYWxsYmFjaywgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5pbXBvcnQgeyBGb3JtQ29uZmlybWF0aW9uLCBGb3JtRXJyb3IsIFJlbmRlckZpZWxkcywgU3VibWl0LCBQcm9ncmVzc0JhciB9IGZyb20gJy4vRm9ybUVsZW1lbnRzJztcblxuaW1wb3J0IHtcbiAgY2hlY2tDb25kaXRpb25hbExvZ2ljLFxuICBmZXRjaEZvcm0sXG4gIGZvcmNlVmFsaWRhdGlvbixcbiAgbmV4dFN0ZXAsXG4gIHByZXZTdGVwLFxuICBzY3JvbGxUb0NvbmZpcm1hdGlvbixcbiAgc2V0VG91Y2hlZEhhbmRsZXIsXG4gIHVuc2V0RXJyb3IsXG4gIHVwZGF0ZUZpZWxkc1ZhbHVlc0Jhc2VkT25FbnRyeSxcbiAgdXBkYXRlRm9ybUhhbmRsZXIsXG59IGZyb20gJy4vSGVscGVycy9mb3JtJztcblxuaW1wb3J0IHsgdmFsaWRhdGVGaWVsZCB9IGZyb20gJy4vSGVscGVycy92YWxpZGF0aW9uJztcblxuY29uc3QgR3Jhdml0eUZvcm0gPSBwcm9wcyA9PiB7XG4gIGNvbnN0IHsgaW5pdGlhbFBhZ2UsIHBvcHVsYXRlZEVudHJ5LCBvbkNoYW5nZSB9ID0gcHJvcHM7XG5cbiAgY29uc3QgW3N1Ym1pdEZhaWxlZCwgc2V0U3VibWl0RmFpbGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2Vycm9yTWVzc2FnZXMsIHNldEVycm9yTWVzc2FnZXNdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbZm9ybVZhbHVlcywgc2V0Rm9ybVZhbHVlc10gPSB1c2VTdGF0ZSh7fSk7XG4gIGNvbnN0IFtzdWJtaXR0aW5nLCBzZXRTdWJtaXR0aW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3N1Ym1pdFN1Y2Nlc3MsIHNldFN1Ym1pdFN1Y2Nlc3NdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbY29uZmlybWF0aW9uTWVzc2FnZSwgc2V0Q29uZmlybWF0aW9uTWVzc2FnZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtmb3JtRGF0YSwgc2V0Rm9ybURhdGFdID0gdXNlU3RhdGUoe30pO1xuICBjb25zdCBbdG91Y2hlZCwgc2V0VG91Y2hlZF0gPSB1c2VTdGF0ZSh7fSk7XG4gIGNvbnN0IFthY3RpdmVQYWdlLCBzZXRBY3RpdmVQYWdlXSA9IHVzZVN0YXRlKGluaXRpYWxQYWdlIHx8IDEpO1xuICBjb25zdCBbY29uZGl0aW9uRmllbGRzLCBzZXRDb25kaXRpb25GaWVsZHNdID0gdXNlU3RhdGUoe30pO1xuICBjb25zdCBbY29uZGl0aW9uYWxJZHMsIHNldENvbmRpdGlvbmFsSWRzXSA9IHVzZVN0YXRlKHt9KTtcbiAgY29uc3QgW2lzTXVsdGlwYXJ0LCBzZXRJc011bHRpUGFydF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtwYWdlQ2xpY2tlZCwgc2V0UGFnZUNsaWNrZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2hvd1BhZ2VWYWxpZGF0aW9uTXNnLCBzZXRTaG93UGFnZVZhbGlkYXRpb25Nc2ddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbcGFnZXMsIHNldFBhZ2VzXSA9IHVzZVN0YXRlKHt9KTtcblxuICBjb25zdCB3cmFwcGVyUmVmID0gdXNlUmVmKG51bGwpO1xuXG4gIGNvbnN0IHVwZGF0ZUVudHJ5RmllbGRzID0gdXNlQ2FsbGJhY2socG9wdWxhdGVkRW50cnkgPT4ge1xuICAgIHVwZGF0ZUZpZWxkc1ZhbHVlc0Jhc2VkT25FbnRyeShwb3B1bGF0ZWRFbnRyeSk7XG4gIH0sIFtdKTtcblxuICAvKipcbiAgICogRmV0Y2ggZm9ybSBkYXRhXG4gICAqL1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoRm9ybSh7XG4gICAgICBzZXRGb3JtRGF0YSxcbiAgICAgIHNldEZvcm1WYWx1ZXMsXG4gICAgICBzZXRBY3RpdmVQYWdlLFxuICAgICAgc2V0Q29uZGl0aW9uRmllbGRzLFxuICAgICAgc2V0Q29uZGl0aW9uYWxJZHMsXG4gICAgICBzZXRQYWdlcyxcbiAgICAgIHNldElzTXVsdGlQYXJ0LFxuICAgICAgLi4ucHJvcHMsXG4gICAgfSk7XG4gIH0sIFtdKTtcblxuICAvKipcbiAgICogQ2FsbCBjdXN0b20gb25DaGFuZ2UgaGFuZGxlciB3aXRoIHBhc3NlZCB2YWx1ZXMgZnJvbSBmb3JtXG4gICAqL1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChvbkNoYW5nZSkge1xuICAgICAgb25DaGFuZ2UoZm9ybVZhbHVlcyk7XG4gICAgfVxuICB9LCBbZm9ybVZhbHVlc10pO1xuXG4gIC8qKlxuICAgKiBTZXQgZW50cnkgdG8gdGhlIGZvcm1cbiAgICovXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHBvcHVsYXRlZEVudHJ5KSB7XG4gICAgICB1cGRhdGVFbnRyeUZpZWxkcyhwb3B1bGF0ZWRFbnRyeSk7XG4gICAgfVxuICB9LCBbcG9wdWxhdGVkRW50cnldKTtcblxuICAvKipcbiAgICogU2Nyb2xsIHBhZ2UgdG8gdGhlIGZpcnN0IG5vdCB2YWxpZCBmaWVsZFxuICAgKi9cbiAgY29uc3Qgc2Nyb2xsVG9GaXJzdEludmFsaWRGaWVsZCA9ICgpID0+IHtcbiAgICBpZiAoIXdyYXBwZXJSZWYpIHJldHVybjtcblxuICAgIGNvbnN0IGZpcnN0RXJyRWwgPSB3cmFwcGVyUmVmLmN1cnJlbnQucXVlcnlTZWxlY3RvcignLmZvcm0tZmllbGQuZXJyb3InKTtcbiAgICBpZiAoZmlyc3RFcnJFbCkge1xuICAgICAgZmlyc3RFcnJFbC5zY3JvbGxJbnRvVmlldygpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCB7XG4gICAgdGl0bGUsXG4gICAgZm9ybUlELFxuICAgIHN1Ym1pdEljb24sXG4gICAgc2F2ZVN0YXRlVG9IdG1sRmllbGQsXG4gICAgc3R5bGVkQ29tcG9uZW50cyxcbiAgICBjdXN0b21Db21wb25lbnRzLFxuICAgIGVycm9yTWVzc2FnZSxcbiAgICBkcm9wem9uZVRleHQsXG4gICAgbG9hZGluZ1NwaW5uZXIsXG4gICAgb25FcnJvcixcbiAgICBsYW5ndWFnZSxcbiAgICBhcGlLZXlzLFxuICB9ID0gcHJvcHM7XG5cbiAgY29uc3Qge1xuICAgIEJ1dHRvbixcbiAgICBMb2FkaW5nLFxuICAgIEZvcm1FcnJvcjogU0Zvcm1FcnJvcixcbiAgICBGb3JtQ29uZmlybWF0aW9uOiBTRm9ybUNvbmZpcm1hdGlvbixcbiAgICBHRldyYXBwZXIgPSAnZGl2JyxcbiAgfSA9IHN0eWxlZENvbXBvbmVudHMgfHwgZmFsc2U7XG5cbiAgY29uc3QgeyBjc3NDbGFzcywgYnV0dG9uOiB7IGNvbmRpdGlvbmFsTG9naWMgfSA9IHt9IH0gPSBmb3JtRGF0YSB8fCB7fTtcbiAgY29uc3QgaGlkZVN1Ym1pdEJ1dHRvbiA9XG4gIGNvbmRpdGlvbmFsTG9naWMgJiZcbiAgY2hlY2tDb25kaXRpb25hbExvZ2ljKFxuICAgIGNvbmRpdGlvbmFsTG9naWMsXG4gICAgT2JqZWN0LmtleXMoZm9ybVZhbHVlcykubGVuZ3RoID4gMCA/IGZvcm1WYWx1ZXMgOiBmb3JtRGF0YS5maWVsZHNcbiAgKTtcblxuICBjb25zdCBoYW5kbGVQcmV2U3RlcCA9IGUgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBwcmV2U3RlcChmb3JtVmFsdWVzLCBwYWdlcywgYWN0aXZlUGFnZSwgc2V0QWN0aXZlUGFnZSwgc2V0UGFnZUNsaWNrZWQpO1xuICB9O1xuXG4gIGNvbnN0IG9uU3VibWl0ID0gYXN5bmMgZXZlbnQgPT4ge1xuICAgIGNvbnN0IHsgb25TdWJtaXQ6IGN1c3RvbU9uU3VibWl0LCBmaWx0ZXJGb3JtRGF0YSB9ID0gcHJvcHM7XG4gICAgbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKGV2ZW50LnRhcmdldCk7XG5cbiAgICBpZiAoZmlsdGVyRm9ybURhdGEpIGZvcm1EYXRhID0gZmlsdGVyRm9ybURhdGEoZm9ybURhdGEsIGZvcm1WYWx1ZXMpO1xuXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNvbnN0IGlzRm9ybVZhbGlkID0gZm9yY2VWYWxpZGF0aW9uKFxuICAgICAgYWN0aXZlUGFnZSxcbiAgICAgIGZvcm1WYWx1ZXMsXG4gICAgICBzZXRTaG93UGFnZVZhbGlkYXRpb25Nc2csXG4gICAgICBzZXRUb3VjaGVkXG4gICAgKTtcblxuICAgIGlmICghaXNGb3JtVmFsaWQpIHtcbiAgICAgIHNjcm9sbFRvRmlyc3RJbnZhbGlkRmllbGQoKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoY3VzdG9tT25TdWJtaXQpIHtcbiAgICAgIGN1c3RvbU9uU3VibWl0KGZvcm1EYXRhKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0U3VibWl0dGluZyh0cnVlKTtcbiAgICAgIHNldFN1Ym1pdFN1Y2Nlc3MoZmFsc2UpO1xuICAgICAgc2V0U3VibWl0RmFpbGVkKGZhbHNlKTtcbiAgICAgIHNldENvbmZpcm1hdGlvbk1lc3NhZ2UoZmFsc2UpO1xuICAgICAgc2V0RXJyb3JNZXNzYWdlcyhmYWxzZSk7XG5cbiAgICAgIGNvbnN0IHsgZm9ybUlELCBiYWNrZW5kVXJsLCBqdW1wVG9Db25maXJtYXRpb24sIG9uU3VibWl0U3VjY2Vzcywgb25FcnJvciB9ID0gcHJvcHM7XG4gICAgICBjb25zdCBnZlN1Ym1pc3Npb25VcmwgPSBiYWNrZW5kVXJsLnN1YnN0cmluZygwLCBiYWNrZW5kVXJsLmluZGV4T2YoJy93cC1qc29uJykpO1xuXG4gICAgICBmZXRjaChgJHtnZlN1Ym1pc3Npb25Vcmx9L3dwLWpzb24vZ2YvdjIvZm9ybXMvJHtmb3JtSUR9L3N1Ym1pc3Npb25zYCwge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgYm9keTogZm9ybURhdGEsXG4gICAgICB9KVxuICAgICAgICAudGhlbihyZXNwID0+IHJlc3AuanNvbigpKVxuICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgICAgaWYgKHJlc3BvbnNlICYmIHJlc3BvbnNlLmlzX3ZhbGlkKSB7XG4gICAgICAgICAgICBpZiAob25TdWJtaXRTdWNjZXNzKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHJlcyA9IG9uU3VibWl0U3VjY2VzcyhyZXNwb25zZSk7XG4gICAgICAgICAgICAgIGlmICghcmVzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBjb25maXJtYXRpb25NZXNzYWdlID0gcmVzcG9uc2UuY29uZmlybWF0aW9uX21lc3NhZ2U7XG4gICAgICAgICAgICBjb25zdCB7IGNvbmZpcm1hdGlvbl90eXBlLCBjb25maXJtYXRpb25fcmVkaXJlY3QgfSA9IHJlc3BvbnNlIHx8IGZhbHNlO1xuICAgICAgICAgICAgaWYgKGNvbmZpcm1hdGlvbl90eXBlICYmIGNvbmZpcm1hdGlvbl9yZWRpcmVjdCAmJiBjb25maXJtYXRpb25fdHlwZSA9PT0gJ3JlZGlyZWN0Jykge1xuICAgICAgICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShjb25maXJtYXRpb25fcmVkaXJlY3QpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2V0U3VibWl0dGluZyhmYWxzZSk7XG4gICAgICAgICAgICBzZXRTdWJtaXRTdWNjZXNzKHRydWUpO1xuICAgICAgICAgICAgc2V0Q29uZmlybWF0aW9uTWVzc2FnZShjb25maXJtYXRpb25NZXNzYWdlKTtcblxuICAgICAgICAgICAgaWYgKGp1bXBUb0NvbmZpcm1hdGlvbikge1xuICAgICAgICAgICAgICBzY3JvbGxUb0NvbmZpcm1hdGlvbihwcm9wcywgd3JhcHBlclJlZiwganVtcFRvQ29uZmlybWF0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cge1xuICAgICAgICAgICAgICByZXNwb25zZSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICAgIGNvbnN0IGVycm9yTWVzc2FnZXMgPVxuICAgICAgICAgICAgZXJyb3IgJiYgZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2UudmFsaWRhdGlvbl9tZXNzYWdlc1xuICAgICAgICAgICAgICA/IGVycm9yLnJlc3BvbnNlLnZhbGlkYXRpb25fbWVzc2FnZXNcbiAgICAgICAgICAgICAgOiAnU29tZXRoaW5nIHdlbnQgd3JvbmcnO1xuXG4gICAgICAgICAgaWYgKG9uRXJyb3IpIHtcbiAgICAgICAgICAgIG9uRXJyb3IoZXJyb3JNZXNzYWdlcyk7XG4gICAgICAgICAgICBzZXRTdWJtaXR0aW5nKGZhbHNlKTtcbiAgICAgICAgICAgIHNldFN1Ym1pdEZhaWxlZCh0cnVlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0U3VibWl0dGluZyhmYWxzZSk7XG4gICAgICAgICAgICBzZXRTdWJtaXRGYWlsZWQodHJ1ZSk7XG4gICAgICAgICAgICBzZXRFcnJvck1lc3NhZ2VzKGVycm9yTWVzc2FnZXMpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChqdW1wVG9Db25maXJtYXRpb24pIHtcbiAgICAgICAgICAgIHNjcm9sbFRvQ29uZmlybWF0aW9uKHByb3BzLCB3cmFwcGVyUmVmKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIChcbiAgICA8R0ZXcmFwcGVyIHJlZj17d3JhcHBlclJlZn0gY2xhc3NOYW1lPVwiZm9ybS13cmFwcGVyXCIgaWQ9e2BncmF2aXR5X2Zvcm1fJHtmb3JtSUR9YH0+XG4gICAgICB7Zm9ybURhdGEudGl0bGUgPyBudWxsIDogTG9hZGluZyAmJiA8TG9hZGluZyBpc0xvYWRpbmcgLz59XG5cbiAgICAgIHtzdWJtaXRGYWlsZWQgJiYgIXN1Ym1pdFN1Y2Nlc3MgJiYgIW9uRXJyb3IgJiYgKFxuICAgICAgICA8Rm9ybUVycm9yXG4gICAgICAgICAgU0Zvcm1FcnJvcj17U0Zvcm1FcnJvciB8fCBmYWxzZX1cbiAgICAgICAgICBlcnJvck1lc3NhZ2U9e2Vycm9yTWVzc2FnZSB8fCAnVGhlcmUgd2FzIGEgcHJvYmxlbSB3aXRoIHlvdXIgc3VibWlzc2lvbid9XG4gICAgICAgIC8+XG4gICAgICApfVxuXG4gICAgICB7c3VibWl0U3VjY2VzcyAmJiBjb25maXJtYXRpb25NZXNzYWdlICYmIChcbiAgICAgICAgPEZvcm1Db25maXJtYXRpb25cbiAgICAgICAgICBjb25maXJtYXRpb249e2NvbmZpcm1hdGlvbk1lc3NhZ2V9XG4gICAgICAgICAgU0Zvcm1Db25maXJtYXRpb249e1NGb3JtQ29uZmlybWF0aW9ufVxuICAgICAgICAvPlxuICAgICAgKX1cblxuICAgICAgeyFzdWJtaXRTdWNjZXNzICYmIGZvcm1EYXRhLmZpZWxkcyA/IChcbiAgICAgICAgPGZvcm1cbiAgICAgICAgICBvblN1Ym1pdD17ZXZlbnQgPT4gb25TdWJtaXQoZXZlbnQpfVxuICAgICAgICAgIGNsYXNzTmFtZT17Y3NzQ2xhc3N9XG4gICAgICAgICAgZW5jVHlwZT17aXNNdWx0aXBhcnQgPyAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScgOiB1bmRlZmluZWR9XG4gICAgICAgICAgbm9WYWxpZGF0ZVxuICAgICAgICA+XG4gICAgICAgICAgeyhmb3JtRGF0YS50aXRsZSB8fCBmb3JtRGF0YS5kZXNjcmlwdGlvbikgJiYgKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAge2Zvcm1EYXRhLnRpdGxlICYmIHRpdGxlID8gPGgzIGNsYXNzTmFtZT1cImZvcm0tdGl0bGVcIj57Zm9ybURhdGEudGl0bGV9PC9oMz4gOiBudWxsfVxuICAgICAgICAgICAgICB7Zm9ybURhdGEuZGVzY3JpcHRpb24gPyAoXG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiZm9ybS1kZXNjcmlwdGlvblwiPntmb3JtRGF0YS5kZXNjcmlwdGlvbn08L3A+XG4gICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0td3JhcHBlclwiPlxuICAgICAgICAgICAge2Zvcm1EYXRhPy5wYWdpbmF0aW9uPy5wYWdlcyAmJiAoXG4gICAgICAgICAgICAgIDxQcm9ncmVzc0JhclxuICAgICAgICAgICAgICAgIHBhZ2luYXRpb249e2Zvcm1EYXRhLnBhZ2luYXRpb259XG4gICAgICAgICAgICAgICAgYWN0aXZlUGFnZT17YWN0aXZlUGFnZX1cbiAgICAgICAgICAgICAgICBmaXJzdFBhZ2VDc3NDbGFzcz17Zm9ybURhdGEuZmlyc3RQYWdlQ3NzQ2xhc3N9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgPFJlbmRlckZpZWxkc1xuICAgICAgICAgICAgICBzdHlsZWRDb21wb25lbnRzPXtzdHlsZWRDb21wb25lbnRzfVxuICAgICAgICAgICAgICBjdXN0b21Db21wb25lbnRzPXtjdXN0b21Db21wb25lbnRzfVxuICAgICAgICAgICAgICBmaWVsZHM9e2Zvcm1EYXRhLmZpZWxkc31cbiAgICAgICAgICAgICAgZm9ybVZhbHVlcz17Zm9ybVZhbHVlc31cbiAgICAgICAgICAgICAgc3VibWl0RmFpbGVkPXtzdWJtaXRGYWlsZWR9XG4gICAgICAgICAgICAgIHN1Ym1pdFN1Y2Nlc3M9e3N1Ym1pdFN1Y2Nlc3N9XG4gICAgICAgICAgICAgIHVwZGF0ZUZvcm09eyhldmVudCwgZmllbGQsIGlucHV0SUQpID0+XG4gICAgICAgICAgICAgICAgdXBkYXRlRm9ybUhhbmRsZXIoXG4gICAgICAgICAgICAgICAgICBmaWVsZCxcbiAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgaW5wdXRJRCxcbiAgICAgICAgICAgICAgICAgIGZvcm1WYWx1ZXMsXG4gICAgICAgICAgICAgICAgICBzZXRGb3JtVmFsdWVzLFxuICAgICAgICAgICAgICAgICAgY29uZGl0aW9uYWxJZHMsXG4gICAgICAgICAgICAgICAgICBjb25kaXRpb25GaWVsZHNcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgdG91Y2hlZD17dG91Y2hlZH1cbiAgICAgICAgICAgICAgc2V0VG91Y2hlZD17aWQgPT4gc2V0VG91Y2hlZEhhbmRsZXIoaWQsIHRvdWNoZWQsIHNldFRvdWNoZWQpfVxuICAgICAgICAgICAgICBzZXRFcnJvck1lc3NhZ2VzPXtzZXRFcnJvck1lc3NhZ2VzfVxuICAgICAgICAgICAgICBwYWdpbmF0aW9uPXtmb3JtRGF0YS5wYWdpbmF0aW9ufVxuICAgICAgICAgICAgICBhY3RpdmVQYWdlPXthY3RpdmVQYWdlfVxuICAgICAgICAgICAgICBwcmV2U3RlcD17ZSA9PiBoYW5kbGVQcmV2U3RlcChlKX1cbiAgICAgICAgICAgICAgbmV4dFN0ZXA9e2UgPT5cbiAgICAgICAgICAgICAgICBuZXh0U3RlcChcbiAgICAgICAgICAgICAgICAgIGUsXG4gICAgICAgICAgICAgICAgICBwcm9wcyxcbiAgICAgICAgICAgICAgICAgIHBhZ2VzLFxuICAgICAgICAgICAgICAgICAgZm9ybVZhbHVlcyxcbiAgICAgICAgICAgICAgICAgIGFjdGl2ZVBhZ2UsXG4gICAgICAgICAgICAgICAgICBzZXRBY3RpdmVQYWdlLFxuICAgICAgICAgICAgICAgICAgc2V0UGFnZUNsaWNrZWQsXG4gICAgICAgICAgICAgICAgICBzZXRUb3VjaGVkLFxuICAgICAgICAgICAgICAgICAgc2V0U2hvd1BhZ2VWYWxpZGF0aW9uTXNnXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGNoZWNrQ29uZGl0aW9uYWxMb2dpYz17KGNvbmRpdGlvbiwgZmllbGRzKSA9PlxuICAgICAgICAgICAgICAgIGNoZWNrQ29uZGl0aW9uYWxMb2dpYyhjb25kaXRpb24sIChmaWVsZHMgPSBmYWxzZSkpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgc2F2ZVN0YXRlVG9IdG1sRmllbGQ9e3NhdmVTdGF0ZVRvSHRtbEZpZWxkfVxuICAgICAgICAgICAgICBlbmFibGVIb25leXBvdD17Zm9ybURhdGEuZW5hYmxlSG9uZXlwb3R9XG4gICAgICAgICAgICAgIGVycm9ycz17ZXJyb3JNZXNzYWdlc31cbiAgICAgICAgICAgICAgdW5zZXRFcnJvcj17aWQgPT4gdW5zZXRFcnJvcihpZCwgZXJyb3JNZXNzYWdlcyl9XG4gICAgICAgICAgICAgIGRyb3B6b25lVGV4dD17ZHJvcHpvbmVUZXh0fVxuICAgICAgICAgICAgICBwYWdlQ2xpY2tlZD17cGFnZUNsaWNrZWR9XG4gICAgICAgICAgICAgIGxhbmd1YWdlPXtsYW5ndWFnZX1cbiAgICAgICAgICAgICAgYXBpS2V5cz17YXBpS2V5c31cbiAgICAgICAgICAgICAgey4uLnByb3BzfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIHsoIWZvcm1EYXRhLnBhZ2luYXRpb24gfHxcbiAgICAgICAgICAgICAgKGZvcm1EYXRhLnBhZ2luYXRpb24gJiYgZm9ybURhdGEucGFnaW5hdGlvbi5wYWdlcy5sZW5ndGggPT09IGFjdGl2ZVBhZ2UpKSAmJiAoXG4gICAgICAgICAgICAgIDxTdWJtaXRcbiAgICAgICAgICAgICAgICBCdXR0b249e0J1dHRvbn1cbiAgICAgICAgICAgICAgICBMb2FkaW5nPXtMb2FkaW5nfVxuICAgICAgICAgICAgICAgIGZvcm1EYXRhPXtmb3JtRGF0YX1cbiAgICAgICAgICAgICAgICBzdWJtaXRJY29uPXtzdWJtaXRJY29ufVxuICAgICAgICAgICAgICAgIHN1Ym1pdHRpbmc9e3N1Ym1pdHRpbmd9XG4gICAgICAgICAgICAgICAgcHJldlN0ZXA9e2UgPT4gaGFuZGxlUHJldlN0ZXAoZSl9XG4gICAgICAgICAgICAgICAgbG9hZGluZ1NwaW5uZXI9e2xvYWRpbmdTcGlubmVyfVxuICAgICAgICAgICAgICAgIGhpZGVTdWJtaXRCdXR0b249e2hpZGVTdWJtaXRCdXR0b259XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Zvcm0+XG4gICAgICApIDogKFxuICAgICAgICAnJ1xuICAgICAgKX1cbiAgICA8L0dGV3JhcHBlcj5cbiAgKTtcbn07XG5cbkdyYXZpdHlGb3JtLmRlZmF1bHRQcm9wcyA9IHtcbiAgdGl0bGU6IHRydWUsXG4gIHN1Ym1pdEljb246IGZhbHNlLFxuICBzYXZlU3RhdGVUb0h0bWxGaWVsZDogZmFsc2UsXG4gIGp1bXBUb0NvbmZpcm1hdGlvbjogdHJ1ZSxcbn07XG5cbmV4cG9ydCB7IHZhbGlkYXRlRmllbGQsIEZvcm1Db25maXJtYXRpb24sIEZvcm1FcnJvciwgUmVuZGVyRmllbGRzLCBTdWJtaXQgfTtcblxuZXhwb3J0IGRlZmF1bHQgR3Jhdml0eUZvcm07XG5cbiJdLCJtYXBwaW5ncyI6Im9wREFtQkEsS0FBTSxDQUFBQSxXQUFXLENBQUdDLENBQUssRUFBSSxLQUFBQyxDQUFBLE1BQ3JCLENBQUVDLFdBQVcsQ0FB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