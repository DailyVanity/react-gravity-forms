"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireWildcard(require("react")),_jsxRuntime=require("react/jsx-runtime");function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(b,c){if(!c&&b&&b.__esModule)return b;if(null===b||"object"!=typeof b&&"function"!=typeof b)return{default:b};var d=_getRequireWildcardCache(c);if(d&&d.has(b))return d.get(b);var e={__proto__:null},f=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in b)if("default"!=a&&Object.prototype.hasOwnProperty.call(b,a)){var g=f?Object.getOwnPropertyDescriptor(b,a):null;g&&(g.get||g.set)?Object.defineProperty(e,a,g):e[a]=b[a]}return e.default=b,d&&d.set(b,e),e}var _default=({field:a,value:b,validationMessage:c,touched:d,setTouched:e,hideField:f,updateForm:g,styledComponents:h,error:i,unsetError:j,cssClass:k,setFocusClass:l,...m})=>{const{id:n,formId:o,type:p,label:q,placeholder:r,isRequired:s,maxLength:t,description:u,descriptionPlacement:v,labelPlacement:w,width:x,customName:y,emailConfirmEnabled:z,inputs:A}=a,[B,C]=(0,_react.useState)(A),D=(a,b)=>{const c={...B};c[b]&&(c[b].cssClass=a&&c&&0<!!c.length?"filled":"",C(c))},{Input:E="input",Label:F="label",Box:G="div"}=h||!1;return(0,_jsxRuntime.jsx)(G,{width:x,className:c&&d||i?`form-field error ${k}`:`form-field ${k}`,style:{display:f?"none":void 0},children:(0,_jsxRuntime.jsxs)("div",{className:p,children:[(0,_jsxRuntime.jsxs)(F,{htmlFor:`input_${o}_${n}`,className:`gf-label ${w}`,children:[q,s?(0,_jsxRuntime.jsx)("abbr",{children:"*"}):null]}),"above"===v&&u&&(0,_jsxRuntime.jsx)("div",{className:"description",dangerouslySetInnerHTML:{__html:u}}),z?(0,_jsxRuntime.jsx)(_jsxRuntime.Fragment,{children:A&&A.length&&A.map((f,h)=>(0,_jsxRuntime.jsxs)("span",{className:`${1<A.length?`ginput_${0===h?"left":"right"}`:"medim"} ${B[h].cssClass?B[h].cssClass:""}`,children:[(0,_jsxRuntime.jsxs)(F,{className:`gf-label ${w}`,htmlFor:`input_${o}_${f.id}_${h}`,children:[f.customLabel||f.label,s?(0,_jsxRuntime.jsx)("abbr",{children:"*"}):null]}),(0,_jsxRuntime.jsx)(E,{id:`input_${o}_${f.id}_${h}`,name:y||`input_${n}${1===h?`_${h+1}`:""}`,type:p,value:b&&b[h]&&b[h].val?b[h].val:"",placeholder:f.placeholder?f.placeholder:r,required:s,autoComplete:"off",onChange:b=>{a.subId=h,g(b,a),j(n)},onBlur:c=>{a.subId=h,g(c,a),e(n),D(b&&b[h]&&b[h].val&&""!==b[h].val,h)},onFocus:()=>D(!0,h),"aria-label":q,"aria-describedby":`error_${o}_${f.id}_${h}`,"aria-invalid":!!c&&d})]},`input_${o}_${f.id}`))}):(0,_jsxRuntime.jsx)(_jsxRuntime.Fragment,{children:(0,_jsxRuntime.jsx)(E,{id:`input_${o}_${n}`,name:y||`input_${n}`,type:p,value:b?b:"",placeholder:r,maxLength:t,required:s,onChange:b=>{g(b,a),j(n)},onBlur:c=>{g(c,a),e(n),l(""!==b)},onFocus:()=>l(!0),"aria-label":q,"aria-describedby":`error_${o}_${n}`,"aria-invalid":!!c&&d||!!i})}),"above"!==v&&u&&(0,_jsxRuntime.jsx)("div",{className:"description",dangerouslySetInnerHTML:{__html:u}}),(c&&d||i)&&(0,_jsxRuntime.jsx)("span",{className:"error-message",id:`error_${o}_${n}`,children:c||i})]})})};exports.default=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,