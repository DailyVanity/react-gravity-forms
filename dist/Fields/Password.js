"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireWildcard(require("react")),_InputLabel=_interopRequireDefault(require("../FormElements/InputLabel")),_jsxRuntime=require("react/jsx-runtime");function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(b,c){if(!c&&b&&b.__esModule)return b;if(null===b||"object"!=typeof b&&"function"!=typeof b)return{default:b};var d=_getRequireWildcardCache(c);if(d&&d.has(b))return d.get(b);var e={__proto__:null},f=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in b)if("default"!=a&&Object.prototype.hasOwnProperty.call(b,a)){var g=f?Object.getOwnPropertyDescriptor(b,a):null;g&&(g.get||g.set)?Object.defineProperty(e,a,g):e[a]=b[a]}return e.default=b,d&&d.set(b,e),e}var _default=({field:a,value:b,validationMessage:c,touched:d,setTouched:e,hideField:f,updateForm:g,styledComponents:h,error:i,unsetError:j,...k})=>{const{id:l,formId:m,type:n,label:o,placeholder:p,isRequired:q,maxLength:r,description:s,descriptionPlacement:t,labelPlacement:u,width:v,customName:w,inputs:x,cssClass:y,passwordStrengthEnabled:z,minPasswordStrength:A}=a,{Input:B="input",Label:C="label",Box:D="div"}=h||!1,[E,F]=(0,_react.useState)(x),[G,H]=(0,_react.useState)("blank"),I=(a,b)=>{const c={...E};c[b].cssClass=a?"filled":"",F(c)},J=a=>{var b=Math.LN2,c=Math.log,d=Math.pow;let e,f,g=0;return 0>=a.length?"blank":4>a.length?"short":(a.match(/[0-9]/)&&(g+=10),a.match(/[a-z]/)&&(g+=26),a.match(/[A-Z]/)&&(g+=26),a.match(/[^a-zA-Z0-9]/)&&(g+=31),e=c(d(g,a.length)),f=e/b,40>f?"bad":56>f?"good":"strong")},K=a=>{const b=J(a);H(b)};return(0,_jsxRuntime.jsx)(D,{width:v,className:c&&d||i?`form-field error ${y}`:`form-field ${y}`,style:{display:f?"none":void 0},children:(0,_jsxRuntime.jsxs)("div",{className:n,children:[(0,_jsxRuntime.jsx)(_InputLabel.default,{formId:m,id:l,label:o,labelPlacement:u,isRequired:q,styledComponent:h}),"above"===t&&s&&(0,_jsxRuntime.jsx)("div",{className:"description",dangerouslySetInnerHTML:{__html:s.replace(/\n/g,"<br />")}}),(0,_jsxRuntime.jsx)("div",{className:"ginput_container ginput_container_password",children:x&&x.length&&x.map((f,h)=>!f.isHidden&&(0,_jsxRuntime.jsxs)("span",{className:`${1<x.length?`ginput_${0===h?"left":"right"}`:"medim"} ${E[h].cssClass?E[h].cssClass:""}`,children:[(0,_jsxRuntime.jsx)(B,{id:`input_${m}_${f.id}_${h}`,name:w||`input_${l}${1===h?`_${h+1}`:""}`,type:n,value:b&&b[h]&&b[h].val?b[h].val:"",placeholder:f.placeholder?f.placeholder:p,required:q,autoComplete:"off",onChange:b=>{a.subId=h,g(b,a),j(l),z&&0===h&&K(b.target.value)},onBlur:c=>{a.subId=h,g(c,a),e(l),I(b&&b[h]&&b[h].val&&""!==b[h].val,h)},onFocus:()=>I(!0,h),"aria-label":o,"aria-describedby":`error_${m}_${f.id}_${h}`,"aria-invalid":!!c&&d}),(0,_jsxRuntime.jsx)("label",{htmlFor:`input_${m}_${f.id}_${h}`,children:f.placeholder||f.label})]},`input_${m}_${f.id}`))}),(c&&d||i)&&(0,_jsxRuntime.jsx)("span",{className:"error-message",id:`error_${m}_${l}`,dangerouslySetInnerHTML:{__html:c||i}}),"above"!==t&&s&&(0,_jsxRuntime.jsx)("div",{className:"description",dangerouslySetInnerHTML:{__html:s.replace(/\n/g,"<br />")}}),!(c&&d||i)&&z&&(0,_jsxRuntime.jsxs)(_react.default.Fragment,{children:[(0,_jsxRuntime.jsx)("div",{id:`input_${m}_${l}_strength_indicator`,className:`gfield_password_strength ${G}`,children:G&&"blank"!==G?G:"Strength indicator"}),(0,_jsxRuntime.jsx)("input",{type:"hidden",className:"gform_hidden",id:`input_${m}_${l}_strength`,name:`input_${l}_strength`,value:G})]})]})})};exports.default=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,