"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(require("react")),_InputLabel=_interopRequireDefault(require("../FormElements/InputLabel")),_jsxRuntime=require("react/jsx-runtime"),_default=({field:a,value:b,validationMessage:c,touched:d,setTouched:e,hideField:f,updateForm:g,styledComponents:h,error:i,unsetError:j,setFocusClass:k,cssClass:l,...m})=>{const{id:n,formId:o,type:p,label:q,placeholder:r,isRequired:s,maxLength:t,description:u,descriptionPlacement:v,labelPlacement:w,width:x,customName:y}=a,{Input:z="input",Label:A="label",Box:B="div"}=h||!1,{i18n:C}=m||{};return(0,_jsxRuntime.jsx)(B,{width:x,className:c&&d||i?`form-field error ${l}`:`form-field ${l}`,style:{display:f?"none":void 0},children:(0,_jsxRuntime.jsxs)("div",{className:p,children:[(0,_jsxRuntime.jsx)(_InputLabel.default,{formId:o,id:n,label:q,labelPlacement:w,isRequired:s,styledComponent:h}),"above"===v&&u&&(0,_jsxRuntime.jsx)("div",{className:"description",dangerouslySetInnerHTML:{__html:u}}),(0,_jsxRuntime.jsx)(z,{id:`input_${o}_${n}`,name:y||`input_${n}`,type:p,value:b?b:"",placeholder:r,maxLength:t,required:s,onChange:b=>{g(b,a),j(n)},onBlur:c=>{g(c,a),e(n),k(""!==b)},disabled:(()=>"field--street"===l||"field--city"===l)(),onFocus:()=>k(!0),"aria-label":q,"aria-describedby":`error_${o}_${n}`,"aria-invalid":!!c&&d||!!i}),t&&0<t&&(0,_jsxRuntime.jsx)("div",{className:"charleft",children:C?`${C.t("maxCharachters",{length:b.length||0,maxLength:t})}`:`${b.length||0} of ${t} max charachters`}),"above"!==v&&u&&(0,_jsxRuntime.jsx)("div",{className:"description",dangerouslySetInnerHTML:{__html:u}}),(c&&d||i)&&(0,_jsxRuntime.jsx)("span",{className:"error-message",id:`error_${o}_${n}`,children:c||i})]})})};exports.default=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,