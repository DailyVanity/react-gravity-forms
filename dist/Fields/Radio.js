"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_react=_interopRequireWildcard(require("react")),_InputLabel=_interopRequireDefault(require("../FormElements/InputLabel")),_jsxRuntime=require("react/jsx-runtime");function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(b,c){if(!c&&b&&b.__esModule)return b;if(null===b||"object"!=typeof b&&"function"!=typeof b)return{default:b};var d=_getRequireWildcardCache(c);if(d&&d.has(b))return d.get(b);var e={__proto__:null},f=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in b)if("default"!=a&&Object.prototype.hasOwnProperty.call(b,a)){var g=f?Object.getOwnPropertyDescriptor(b,a):null;g&&(g.get||g.set)?Object.defineProperty(e,a,g):e[a]=b[a]}return e.default=b,d&&d.set(b,e),e}function formatMoney(a,b=2,c=".",d=","){var e=Math.abs;try{b=e(b),b=isNaN(b)?2:b;const f=0>a?"-":"",g=parseInt(a=e(+a||0).toFixed(b)).toString(),h=3<g.length?g.length%3:0;return f+(h?g.substr(0,h)+d:"")+g.substr(h).replace(/(\d{3})(?=\d)/g,`$1${d}`)+(b?c+e(a-g).toFixed(b).slice(2):"")}catch(a){}}class Radio extends _react.Component{constructor(...a){super(...a),(0,_defineProperty2.default)(this,"state",{otherValue:!1,inputValue:!1}),(0,_defineProperty2.default)(this,"onFocus",a=>{let{value:b}=a.target;const{otherValue:c,inputValue:d}=this.state;c===b&&(b=""),this.otherRadio.click(),this.otherRadio.checked=!0,this.setState({inputValue:b})}),(0,_defineProperty2.default)(this,"onBlur",a=>{const{value:b}=a.target;""==b.replace(" ","")?(this.setState({inputValue:this.state.otherValue}),this.otherRadio.checked=!1):this.setState({inputValue:formatMoney(b)})}),(0,_defineProperty2.default)(this,"onChange",a=>{const{value:b}=a.target;this.setState({inputValue:b})}),(0,_defineProperty2.default)(this,"setFocus",()=>{this.otherChoise.focus()})}render(){const{field:a,value:b,validationMessage:c,touched:d,setTouched:e,updateForm:f,hideField:g,styledComponents:h,error:i,unsetError:j}=this.props,{id:k,formId:l,type:m,label:n,cssClass:o,isRequired:p,choices:q,description:r,descriptionPlacement:s,labelPlacement:t,width:u,customName:v,otherPlaceholder:w}=a,{inputValue:x}=this.state,{Radiogroup:y="fieldset",Label:z="legend",Box:A="div",Input:B="input"}=h||!1;return(0,_jsxRuntime.jsxs)(A,{width:u,className:c&&d||i?`form-field error ${o}`:`form-field ${o}`,style:{display:g?"none":void 0},children:[(0,_jsxRuntime.jsxs)(y,{className:"radios",children:[(0,_jsxRuntime.jsx)(_InputLabel.default,{formId:l,id:k,label:n,labelPlacement:t,isRequired:p,styledComponent:h}),"above"===s&&r&&(0,_jsxRuntime.jsx)("div",{className:"description",dangerouslySetInnerHTML:{__html:r}}),q.map((c,d)=>(0,_jsxRuntime.jsxs)("div",{className:m,children:[(0,_jsxRuntime.jsx)("input",{id:`input_${l}_${k}_${d}`,type:"radio",name:v||`input_${k}`,value:c.value,checked:b===c.value,onChange:b=>{f(b,a),e(k),j(k)}}),(0,_jsxRuntime.jsx)("label",{htmlFor:`input_${l}_${k}_${d}`,children:c.text})]},c.value)),a.enableOtherChoice&&(0,_jsxRuntime.jsxs)("div",{className:`${m} other-choise`,children:[(0,_jsxRuntime.jsx)("input",{id:`input_${l}_${k}_${q.length}`,type:"radio",name:`input_${k}`,value:x,onChange:b=>{f(b,a),e(k),j(k)},ref:a=>this.otherRadio=a,onFocus:a=>this.setFocus(a)}),(0,_jsxRuntime.jsx)(B,{id:`input_${l}_${k}_${q.length}_other`,type:"text",placeholder:w||"Other",value:x||"",onFocus:a=>this.onFocus(a),onBlur:b=>{f(b,a),this.onBlur(b)},onChange:a=>{this.onChange(a),j(k)},ref:a=>this.otherChoise=a})]}),"above"!==s&&r&&(0,_jsxRuntime.jsx)("div",{className:"description",dangerouslySetInnerHTML:{__html:r}})]}),(c&&d||i)&&(0,_jsxRuntime.jsx)("span",{className:"error-message",id:`error_${l}_${k}`,children:c||i})]})}}var _default=exports.default=Radio;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,