"use strict";function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _react=_interopRequireWildcard(require("react")),_reactDatepicker=_interopRequireDefault(require("react-datepicker"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var a=new WeakMap;return _getRequireWildcardCache=function(){return a},a}function _interopRequireWildcard(a){if(a&&a.__esModule)return a;if(null===a||"object"!==_typeof(a)&&"function"!=typeof a)return{default:a};var b=_getRequireWildcardCache();if(b&&b.has(a))return b.get(a);var c={},d=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in a)if(Object.prototype.hasOwnProperty.call(a,e)){var f=d?Object.getOwnPropertyDescriptor(a,e):null;f&&(f.get||f.set)?Object.defineProperty(c,e,f):c[e]=a[e]}return c["default"]=a,b&&b.set(a,c),c}function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}function _slicedToArray(a,b){return _arrayWithHoles(a)||_iterableToArrayLimit(a,b)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(a,b){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a)){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{d||null==h["return"]||h["return"]()}finally{if(e)throw f}}return c}}function _arrayWithHoles(a){if(Array.isArray(a))return a}function _objectWithoutProperties(a,b){if(null==a)return{};var c,d,e=_objectWithoutPropertiesLoose(a,b);if(Object.getOwnPropertySymbols){var f=Object.getOwnPropertySymbols(a);for(d=0;d<f.length;d++)c=f[d],!(0<=b.indexOf(c))&&Object.prototype.propertyIsEnumerable.call(a,c)&&(e[c]=a[c])}return e}function _objectWithoutPropertiesLoose(a,b){if(null==a)return{};var c,d,e={},f=Object.keys(a);for(d=0;d<f.length;d++)c=f[d],0<=b.indexOf(c)||(e[c]=a[c]);return e}var _default=function(a){var b=a.field,c=a.value,d=a.validationMessage,e=a.touched,f=a.setTouched,g=a.hideField,h=a.updateForm,i=a.styledComponents,j=a.error,k=a.unsetError,l=a.setFocusClass,m=a.cssClass,n=_objectWithoutProperties(a,["field","value","validationMessage","touched","setTouched","hideField","updateForm","styledComponents","error","unsetError","setFocusClass","cssClass"]),o=b.id,p=b.formId,q=b.type,r=b.label,s=b.placeholder,t=b.isRequired,u=b.maxLength,v=b.description,w=b.descriptionPlacement,x=b.labelPlacement,y=b.width,z=b.inputs,A=b.customName,B=b.dateType,C=b.dateFormat,D=b.defaultValue,E=b.datepickerOptions,F=i||!1,G=F.Input,H=void 0===G?"input":G,I=F.Label,J=void 0===I?"label":I,K=F.Box,L=void 0===K?"div":K,M=F.DatePicker,N=void 0===M?"div":M,O=!!(C&&"dmy"===C)&&"dd/MM/yyyy",P=!!D&&new Date(D);if(O&&D){var Q=D.split("/"),R=new Date(+Q[2],Q[1]-1,+Q[0]);P=R}var S=(0,_react.useState)(P),T=_slicedToArray(S,2),U=T[0],V=T[1],W=function getFormattedInputs(a){return B&&"datefield"===B?"dmy"===C||"dmy_dash"===C||"dmy_dot"===C?[a[1],a[0],a[2]]:"ymd_slash"===C||"ymd_dash"===C||"ymd_dot"===C?[a[2],a[0],a[1]]:a:a}(z),X=function adjustDatePickerOptions(a){if(B&&"datepicker"===B&&a){var b=Object.keys(a);if(b&&0<b.length)for(var c=0;c<b.length;c++)("minDate"===b[c]||"maxDate"===b[c])&&(a[b[c]]=new Date(a[b[c]]))}return a}(E)||{};return _react["default"].createElement(L,{width:y,className:d&&e||j?"form-field error ".concat(m):"form-field ".concat(m),style:{display:g?"none":void 0}},_react["default"].createElement(J,{htmlFor:"input_".concat(p,"_").concat(o),className:"gf-label ".concat(x)},r,t?_react["default"].createElement("abbr",null,"*"):null),_react["default"].createElement("div",{className:q},"above"===w&&v?v&&_react["default"].createElement("div",{className:"description"},v):_react["default"].createElement(_react["default"].Fragment,null,B&&"datepicker"===B?_react["default"].createElement(_react["default"].Fragment,null,_react["default"].createElement(N,{className:"ginput_container ginput_container_date"},_react["default"].createElement(_reactDatepicker["default"],_extends({name:"input_".concat(o),id:"input_".concat(p,"_25_").concat(o),type:"text",className:"datepicker hasDatepicker",selected:U,onChange:function onChange(a){V(a),h({target:{value:a}},b),f(o),k(o),l(a)},onBlur:function onBlur(){h({target:{value:U}},b),f(o),k(o),l(U)},dateFormat:O||void 0,onFocus:function onFocus(){return l(!0)},autoComplete:"off",required:t,placeholderText:s,maxDate:m.includes("past")&&new Date},X))),(d&&e||j)&&_react["default"].createElement("span",{className:"error-message",id:"error_".concat(p,"_").concat(o)},d||j)):_react["default"].createElement(_react["default"].Fragment,null,W&&W.map(function(a,c){return _react["default"].createElement("div",{className:q,key:a.id},_react["default"].createElement(H,{id:"input_".concat(p,"_").concat(o,"_").concat(c),type:"number",name:A||"input_".concat(o,"[]"),placeholder:a.placeholder,step:"1",min:"1",max:"MM"===a.label?12:"DD"===a.label?31:new Date().getFullYear()+1,maxLength:"YYYY"===a.label?4:2,value:a.value,onBlur:function onBlur(d){b.subId=c,b.dateLabel=a.label,h(d,b),f(o),k(o),l(""!==a.value)},onFocus:function onFocus(){return l(!0)}}),_react["default"].createElement("label",{htmlFor:"input_".concat(p,"_").concat(o,"_").concat(c),className:"hide-label"},a.label),d&&e&&d[c]&&c===d[c].index&&d[c].message&&_react["default"].createElement("span",{className:"error-message",id:"error_".concat(p,"_").concat(a.id)},d[c].message),j&&_react["default"].createElement("span",{className:"error-message"},j))}),v&&_react["default"].createElement("div",{className:"description"},v)))))};exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,